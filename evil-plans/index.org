#+TITLE: Evil plans
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
#+STARTUP: lognotedone

#+begin_html
<div class="row"><div class="columns">
#+end_html

<<top>>

Curious about anything? Contact me at sacha@sachachua.com . 
Web: http://sachachua.com/evil-plans
Raw file: [[http://sachachua.com/sharing/evil-plans.org][evil-plans.org]]

Additional notes: http://sachachua.com/blog/2014/03/reflecting-goals-time/

* Current goals

See raw file or end of document for code.

http://doc.norang.ca/org-mode.html

#+CALL: graph-from-tables[:file evil_plans2.png :cmdline "-Kdot -Tpng -Gdpi=100 -Gsize=10,10"](fill-column2=0) :results silent :exports none

#+ATTR_HTML: :usemap #G :style max-width: none
[[file:evil_plans2.png]]

#+begin_src emacs-lisp :results html :exports results :var fill-column=20
      (let* ((cmdline (or (cdr (assoc :cmdline params)) "-Kdot -Tcmapx -Gdpi=100 -Gsize=10,10"))
             (cmd (or (cdr (assoc :cmd params)) "dot"))
             (in-file (org-babel-temp-file "dot-"))
             (map (sacha/org-map-to-graphviz (sacha/org-map-goals "goal") fill-column)))
        (with-temp-file in-file (insert map))
        (org-babel-eval
         (concat cmd
                 " " (org-babel-process-file-name in-file)
                 " " cmdline) ""))
#+end_src

#+RESULTS:
#+BEGIN_HTML
<map id="G" name="G">
<area shape="rect" id="node1" href="#improve_my_blog" title="improve my blog" alt="" coords="112,75,201,99"/>
<area shape="rect" id="node2" href="#share_useful_stuff" title="share useful stuff" alt="" coords="224,135,315,160"/>
<area shape="rect" id="node9" href="#build_good_karma" title="build good karma" alt="" coords="302,196,394,221"/>
<area shape="rect" id="node10" href="#get_more_value_from_my_time" title="get more value from my time" alt="" coords="360,375,465,401"/>
<area shape="rect" id="node3" href="#Develop_emacslife_com_into_beginner_enthusiast_resources_for_Emacs" title="Develop emacslife.com into beginner/enthusiast resources for Emacs" alt="" coords="3,3,108,49"/>
<area shape="rect" id="node4" href="#help_the_Emacs_community_grow" title="help the Emacs community grow" alt="" coords="11,74,100,100"/>
<area shape="rect" id="node5" href="#tickle_my_brain" title="tickle my brain" alt="" coords="283,314,362,338"/>
<area shape="rect" id="node6" href="#add_50_items_to_my_process_library" title="add 50 items to my process library" alt="" coords="336,74,436,100"/>
<area shape="rect" id="node7" href="#delegate_more_effectively" title="delegate more effectively" alt="" coords="529,195,607,221"/>
<area shape="rect" id="node8" href="#delegate_2_000_hours_or__20_000_of_meaningful__useful_work" title="delegate 2,000 hours or $20,000 of meaningful, useful work" alt="" coords="327,124,435,171"/>
<area shape="rect" id="node16" href="#learn_from_people" title="learn from people" alt="" coords="275,252,370,277"/>
<area shape="rect" id="node11" href="#live_an_awesome_life" title="live an awesome life" alt="" coords="714,431,818,455"/>
<area shape="rect" id="node12" href="#add_more_tracking_tools_to_Quantified_Awesome" title="add more tracking tools to Quantified Awesome" alt="" coords="522,308,619,344"/>
<area shape="rect" id="node13" href="#make_better_decisions" title="make better decisions" alt="" coords="655,375,723,401"/>
<area shape="rect" id="node14" href="#track_and_reflect_on_25_non_trivial_decisions_assumptions" title="track and reflect on 25 non&#45;trivial decisions/assumptions" alt="" coords="631,308,747,344"/>
<area shape="rect" id="node15" href="#host_another_10_episodes_of_Emacs_Chats" title="host another 10 episodes of Emacs Chats" alt="" coords="264,8,360,44"/>
<area shape="rect" id="node17" href="#project_F2" title="project F2" alt="" coords="460,196,516,221"/>
<area shape="rect" id="node18" href="#publish_12_free_PWYC_resources" title="publish 12 free/PWYC resources" alt="" coords="213,74,324,100"/>
<area shape="rect" id="node19" href="#learn_image_processing_with_the_Raspberry_Pi" title="learn image processing with the Raspberry Pi" alt="" coords="382,246,483,283"/>
<area shape="rect" id="node20" href="#improve_our_garden_in_2014" title="improve our garden in 2014" alt="" coords="785,375,889,401"/>
<area shape="rect" id="node21" href="#do_a_5_year_experiment_in_self_directed_living" title="do a 5&#45;year experiment in self&#45;directed living" alt="" coords="902,369,997,406"/>
</map>
#+END_HTML

* Including "Someday" goals

See raw file or end of document for code.

#+CALL: graph-from-tables[:file evil_plans3.png :cmdline "-Kdot -Tpng -Gdpi=100 -Gsize=10,10"](fill-column=20,include-someday=1) :results silent :exports none

#+ATTR_HTML: :usemap #G2 :style max-width: none
[[file:evil_plans3.png]]

#+begin_src emacs-lisp :results html :exports results :var fill-column=20
      (let* ((cmdline (or (cdr (assoc :cmdline params)) "-Kdot -Tcmapx -Gdpi=100 -Gsize=10,10"))
             (cmd (or (cdr (assoc :cmd params)) "dot"))
             (in-file (org-babel-temp-file "dot-"))
             (include-someday 1)
             (map (sacha/org-map-to-graphviz (sacha/org-map-goals "goal") fill-column)))
        (with-temp-file in-file (insert map))
        (org-babel-eval
         (concat cmd
                 " " (org-babel-process-file-name in-file)
                 " " cmdline) ""))
#+end_src

#+RESULTS:
#+BEGIN_HTML
<map id="G2" name="G2">
<area shape="rect" id="node1" href="#read_and_reflect_on_key_philosophical_ideas" title="read and reflect on key philosophical ideas" alt="" coords="396,49,461,73"/>
<area shape="rect" id="node2" href="#tickle_my_brain" title="tickle my brain" alt="" coords="270,96,322,112"/>
<area shape="rect" id="node3" href="#live_an_awesome_life" title="live an awesome life" alt="" coords="552,217,621,233"/>
<area shape="rect" id="node7" href="#share_useful_stuff" title="share useful stuff" alt="" coords="223,140,283,156"/>
<area shape="rect" id="node17" href="#get_more_value_from_my_time" title="get more value from my time" alt="" coords="520,180,589,197"/>
<area shape="rect" id="node4" href="#review_31_blogs" title="review 31 blogs" alt="" coords="112,53,166,69"/>
<area shape="rect" id="node5" href="#improve_my_blog" title="improve my blog" alt="" coords="110,96,168,112"/>
<area shape="rect" id="node6" href="#split_off_topic_focused_views" title="split off topic&#45;focused views" alt="" coords="37,52,103,69"/>
<area shape="rect" id="node16" href="#build_good_karma" title="build good karma" alt="" coords="309,180,369,196"/>
<area shape="rect" id="node8" href="#draw_10_visual_guides_for_learning_Emacs" title="draw 10 visual guides for learning Emacs" alt="" coords="315,5,379,29"/>
<area shape="rect" id="node9" href="#help_the_Emacs_community_grow" title="help the Emacs community grow" alt="" coords="174,52,233,69"/>
<area shape="rect" id="node10" href="#set_up_regular_Emacs_hangouts" title="set up regular Emacs hangouts" alt="" coords="81,9,152,26"/>
<area shape="rect" id="node11" href="#create_a_10_week_Emacs_Basics_course" title="create a 10&#45;week Emacs Basics course" alt="" coords="161,9,230,26"/>
<area shape="rect" id="node12" href="#Develop_emacslife_com_into_beginner_enthusiast_resources_for_Emacs" title="Develop emacslife.com into beginner/enthusiast resources for Emacs" alt="" coords="238,2,307,32"/>
<area shape="rect" id="node13" href="#add_50_items_to_my_process_library" title="add 50 items to my process library" alt="" coords="330,96,396,113"/>
<area shape="rect" id="node14" href="#delegate_more_effectively" title="delegate more effectively" alt="" coords="375,139,426,156"/>
<area shape="rect" id="node15" href="#delegate_2_000_hours_or__20_000_of_meaningful__useful_work" title="delegate 2,000 hours or $20,000 of meaningful, useful work" alt="" coords="404,89,475,120"/>
<area shape="rect" id="node27" href="#learn_from_people" title="learn from people" alt="" coords="265,217,327,233"/>
<area shape="rect" id="node18" href="#set_up_Selenium_for_automating_web_actions" title="set up Selenium for automating web actions" alt="" coords="484,136,551,160"/>
<area shape="rect" id="node19" href="#learn_Plover_steno" title="learn Plover steno" alt="" coords="559,140,621,156"/>
<area shape="rect" id="node20" href="#read_the_iMacros_API" title="read the iMacros API" alt="" coords="630,140,699,156"/>
<area shape="rect" id="node21" href="#write_AutoHotkey_script_that_has_file_actions" title="write AutoHotkey script that has file actions" alt="" coords="708,136,769,160"/>
<area shape="rect" id="node22" href="#write_10_blog_posts_with_Dragon_NaturallySpeaking" title="write 10 blog posts with Dragon NaturallySpeaking" alt="" coords="777,136,841,160"/>
<area shape="rect" id="node23" href="#add_more_tracking_tools_to_Quantified_Awesome" title="add more tracking tools to Quantified Awesome" alt="" coords="850,136,914,160"/>
<area shape="rect" id="node24" href="#make_better_decisions" title="make better decisions" alt="" coords="597,180,642,197"/>
<area shape="rect" id="node25" href="#track_and_reflect_on_25_non_trivial_decisions_assumptions" title="track and reflect on 25 non&#45;trivial decisions/assumptions" alt="" coords="922,136,998,160"/>
<area shape="rect" id="node26" href="#host_another_10_episodes_of_Emacs_Chats" title="host another 10 episodes of Emacs Chats" alt="" coords="2,5,65,29"/>
<area shape="rect" id="node28" href="#project_F2" title="project F2" alt="" coords="400,180,437,196"/>
<area shape="rect" id="node29" href="#sketchnote_10_more_books___beeminded" title="sketchnote 10 more books &#160;:beeminded" alt="" coords="194,96,261,113"/>
<area shape="rect" id="node30" href="#publish_12_free_PWYC_resources" title="publish 12 free/PWYC resources" alt="" coords="29,96,102,113"/>
<area shape="rect" id="node31" href="#learn_image_processing_with_the_Raspberry_Pi" title="learn image processing with the Raspberry Pi" alt="" coords="263,49,329,73"/>
<area shape="rect" id="node32" href="#improve_our_garden_in_2014" title="improve our garden in 2014" alt="" coords="650,180,719,197"/>
<area shape="rect" id="node33" href="#do_a_5_year_experiment_in_self_directed_living" title="do a 5&#45;year experiment in self&#45;directed living" alt="" coords="727,176,790,200"/>
</map>
#+END_HTML

How do I want to represent specific goals?
* Goals                                                                :goal:
:PROPERTIES:
:LOGGING:  TODO(@)
:CUSTOM_ID: Goals
:END:

** live an awesome life
   :PROPERTIES:
	 :CUSTOM_ID: live_an_awesome_life
   :END:
*** TODO do a 5-year experiment in self-directed living
    :PROPERTIES:
    :CUSTOM_ID: do_a_5_year_experiment_in_self_directed_living
    :LINK:     [[file:~/personal/business.org::*5-year%20experiment][5-year experiment]]
    :END:
so that I can [[live an awesome life]]

2012-2017

Questions to resolve: 
- Would I prefer the structure of a regular career, or can I learn how to make the most of a more self-directed life?
- Do I understand my wants and needs enough to manage my finances with reasonable safety?

More information: http://sachachua.com/blog/experiment

What could "awesome" look like? 
- Good handle on expenses, resisted lifestyle inflation
- Expenses covered by dividends/capital gains, with a reasonable buffer for the next correction (and so that I can buy the next time stocks go on sale)
- Be the kind of happy, loving, equanimous person I want to be
- Icing on the cake:
  - Tickled brain from learning lots of things
  - Good karma from helping lots of people
  - Scaling up (building resources)
- Confederates whom I know well and am in touch with

What kind of concrete actions or projects will move me towards that? What kinds of things do I want to explore?
- [X] E-book publishing: Easy to do once I have a clear idea of what I want to put together. I like pay-what-you-want.
- [X] Print publishing: Doable with LaTeX and CreateSpace. 
- [ ] Useful, organized non-fiction
- [ ] A way for people to self-identify as tribe members (ex: e-book purchases, mailing list signups)
- [ ] Git-tip and other microtipping?
- See other projects in this file

*** DONE improve our garden in 2014
		:PROPERTIES:
		:CUSTOM_ID: improve_our_garden_in_2014
		:LINK:     [[file:~/personal/organizer.org::*Garden][Garden]]
		:END:
<<garden2014>>

so that I can [[live an awesome life]]

This year:
- Keep track of which plants were planted where
- Water regularly
- Work in the garden every 1-3 days
- Add plenty of compost

4'x8'

# # shed
# # |-------------------+-------------------+-----------------------+-----------------------|
# # | strawberries      | strawberries      | carrots               | carrots               |
# # | choy              | choy              | beets                 | beets                 |
# # | spinach           | spinach           | beets                 | beets                 |
# # | beets             | beets             | spinach               | spinach               |
# # | spinach           | spinach           | spinach               | spinach               |
# # | lettuce, cilantro | lettuce, cilantro | bitter melon, carrots | bitter melon, carrots |
# # | peas (bush) 4/12  | peas (bush) 4/12  | bitter melon, carrots | bitter melon, carrots |
# # | peas 4/12         | peas 4/12         | peas 4/12             | peas 4/12             |
# # |-------------------+-------------------+-----------------------+-----------------------|
# # house

# Want: kale, cherry tomatoes, basil, bitter melon, green onions


# Islington Nurseries compost: 55 delivery, 35 per cubic yard - cheaper to get small quantities from Home Depot
*** TODO build an exercise habit
		:PROPERTIES:
		:CUSTOM_ID: build_an_exercise_habit
		:END:
so that I can [[live an awesome life]]

** tickle my brain
   :PROPERTIES:
   :CUSTOM_ID: tickle_my_brain
   :END:
so that I can [[get more value from my time]] and [[share useful stuff]]
*** DONE learn Morse code for all the letters; receive at 5 WPM; transmit as slowly as needed
    :LOGBOOK:
    - State "TODO"       from "STARTED"    [2014-03-19 Wed 20:33] \\
      ABCD
    CLOCK: [2014-03-19 Wed 20:07]--[2014-03-19 Wed 20:07] =>  0:00
    :END:
    :PROPERTIES:
    :Effort:   20:00
    :CUSTOM_ID: learn_Morse_code_for_all_the_letters__receive_at_5_WPM__transmit_as_slowly_as_needed
    :END:
So that I can [[tickle my brain]]
- [2014-03-19 Wed] Tried Morse Code Trainer on my phone. =) Learning my .- -... -.-. -..!
*** DONE memorize Latin declensions
Done [2014-05-07]
    :LOGBOOK:
    - State "TODO"       from "TODO"       [2014-03-19 Wed 20:32] \\
      First declensions: Almost, but not quite.
    CLOCK: [2014-03-19 Wed 19:59]--[2014-03-19 Wed 20:07] =>  0:08
    :END:
    :PROPERTIES:
    :Effort:   10:00
    :CUSTOM_ID: memorize_Latin_declensions
    :LINK: [[file:~/personal/routines.org::*Test%20Latin%20declensions][Test Latin declensions]]
    :END:
So that I can [[tickle my brain]]

Testing: http://www.latintests.net/grammar/nouns.php - 5 days in a row, first test 100%

- [2014-03-30 Sun] One mistake (first declension), second declension still giving me prblems
- [2014-03-23 Sun] 100% first declension

*** CANCELLED learn image processing with the Raspberry Pi
    :PROPERTIES:
    :CUSTOM_ID: learn_image_processing_with_the_Raspberry_Pi
    :LINK:     [[file:~/personal/people.org::*Raspberry%20Pi][Raspberry Pi]]
    :END:
so that I can [[tickle my brain]]

Using simplecv

- [X] Load the images
- [X] Calculate the absolute difference
- [X] Identify the largest blob (minimum size of X)
- [X] Draw the path followed by the centroid of the blob
- [ ] Figure out a better visualization for litter box monitoring


*** DONE Draw the goal graph based on my Org entries                  :emacs:
    :PROPERTIES:
    :CUSTOM_ID: Draw_the_goal_graph_based_on_my_Org_entries
    :END:
So that I can [[tickle my brain]] and [[make better decisions]]
*** CANCELLED make ABCs of Emacs
So that I can [[tickle my brain]] and [[share useful stuff]]
    :PROPERTIES:
    :CUSTOM_ID: make_ABCs_of_Emacs
    :LINK:     [[file:~/personal/business.org::*Emacs%20ABCs][Emacs ABCs]]
    :END:
- [X] apropos
- browse-kill-ring
- customize / compile / calc
- dired, debug-on-entry
- edebug-defun, eshell
- fastnav, ffap, fixup-whitespace
- grep-find, gnus
- help-with-help, helm
- ielm
- just-one-space
- keyboard macros, kmacro-start-macro, kbd-macro-query
- load-library, locate-library, list-packages
- magit, make-indirect-buffer
- name-last-kbd-macro
- occur (and occur-edit-mode); org
- package-list-packages, picture-mode
- quick-url, query-replace-regexp-eval
- regexp-builder, recursive-edit, recover-this-file,
- savehist-mode, server-start, smartparens
- tags-search, term, thumbs, tmm-menubar, type-break
- undo-tree-visualize
- vc-next-action, view-lossage, visual-line-mode
- where-is, winner-mode, windmove, window-configuration-to-register
- M-x (execute-extended-command)
- yank-pop
- zap-to-char

** share useful stuff
   :PROPERTIES:
   :CUSTOM_ID: share_useful_stuff
   :END:
So that I can [[build good karma]] and [[get more value from my time]]
*** TODO [#C] publish 12 free/PWYC resources												:project:
    :PROPERTIES:
    :CUSTOM_ID: publish_12_free_PWYC_resources
    :END:
So that I can [[share useful stuff]]
- [X] Sketchnoting resources
- [X] No Excuses Guide to Blogging
- [X] Sketchnotes 2012
- [X] Sketchnotes 2013
- [X] How to learn Emacs Lisp by customizing Emacs: http://sach.ac/baby-steps-emacs-lisp - 2014-05-07
- [ ] Baby steps guide to managing your tasks with Org: http://sach.ac/baby-steps-org-todo
- [ ] Intermediate guide to Emacs
- 10-week Emacs Basics course (or 12...)
    1. Mouse, copy, paste
    2. M-x
    3. Customize

*** CANCELLED sketchnote 10 more books 
so that I can [[share useful stuff]]
		:PROPERTIES:
		:LINK:     [[file:~/personal/business.org::*Sketchnote%2010%20more%20books][Sketchnote 10 more books]]
		:CUSTOM_ID: sketchnote_10_more_books___beeminded
		:END:
*** DONE package Sketchnotes 2012 for print
    :PROPERTIES:
    :CUSTOM_ID: package_Sketchnotes_2012_for_print
    :LINK:     [[file:~/personal/business.org::*Put%20together%20print%20for%20Sketchnotes%202012][Put together print for Sketchnotes 2012]]
    :END:
    So that I can [[share useful stuff]]
*** DONE organize transcripts, MP3s, and videos in one place
    :PROPERTIES:
    :CUSTOM_ID: organize_transcripts__MP3s__and_videos_in_one_place
    :END:
So that I can [[share useful stuff]]

https://docs.google.com/spreadsheet/pub?key=0AsLpkeSVIjRYdFcxeTJ3SDdkNXdINzJ1NWlvdGJWUUE&output=html

Task: https://trello.com/c/kR2XtkoP/175-create-a-master-spreadsheet-with-all-of-my-youtube-videos-transcripts-blog-posts-related-to-those-videos-and-mp3-urls

*** TODO get good at reporting
    :PROPERTIES:
    :CUSTOM_ID: get_good_at_reporting
    :END:
So that I can [[share useful stuff]]
** build good karma
   :PROPERTIES:
   :CUSTOM_ID: build_good_karma
   :END:
So that I can [[learn from people]]

Is this a true goal, or it mainly on the way to something else? Are
there projects that support this instead of the other stuff?

** learn from people
   :PROPERTIES:
   :CUSTOM_ID: learn_from_people
   :END:
So that I can [[tickle my brain]] and [[share useful stuff]]
*** TODO learn Japanese
    :PROPERTIES:
    :LINK:     [[file:~/personal/organizer.org::*Learn%20Japanese][Learn Japanese]]
    :CUSTOM_ID: learn_Japanese
    :END:
So that I can [[learn from people]]

*** TODO complete project I2
    :PROPERTIES:
    :CUSTOM_ID: complete_project_I2
    :END:
So that I can [[learn from people]]
*** DONE project F2
So that I can [[learn from people]] and [[live an awesome life]]

    :PROPERTIES:
    :LINK: file:~/personal/people.org::*Project%20F
		:CUSTOM_ID: project_F2
    :END:

*** TODO host another 10 episodes of Emacs Chats or hangouts
		:LOGBOOK:
		- State "TODO"       from "DONE"       [2014-11-01 Sat 16:58]
		:END:
		:PROPERTIES:
    :CUSTOM_ID: host_another_10_episodes_of_Emacs_Chats_or_hangouts
		:END:

So that I can [[learn from people]] and [[help the Emacs community grow]]

1. [X] Emacs Chat: technomancy 
2. [X] Emacs Chat: Xah Lee 
3. [X] Emacs Chat: Bozhidar Batsov
4. Bodil Stokke?
5. Steve Purcell?
6. Stefan Monnier?
7. John Kitchin?
8. Reach out to the other bloggers on Planet Emacsen

*** TODO Set up an ongoing mentoring/coaching relationship with an Emacs coach
    :PROPERTIES:
    :CUSTOM_ID: Set_up_an_ongoing_mentoring_coaching_relationship_with_an_Emacs_coach
    :END:
So that I can [[get more value from my time]]

https://www.codementor.io/sanityinc: RoR, jQuery, TDD, Emacs, Javascript
https://www.codementor.io/skeeto
http://emacs-doctor.com

Possible concrete goals:
- Follow best practices in setting up my web development environment (Rails, Javascript, NodeJS, Angular); learn how to think syntactically
- Discover what else I should be doing with Org Mode
- Set up a solid external data and backup plan
- Learn more about what I don't know I don't know (Hard!)
- Get into Emacs development

*** DONE complete project F
    :PROPERTIES:
    :CUSTOM_ID: complete_project_F
    :LINK: file:~/personal/people.org::*Project%20F
    :END:
So that I can [[learn from people]]

*** DONE share workflow for Google Hangouts on Air
    :PROPERTIES:
    :CUSTOM_ID: share_workflow_for_Google_Hangouts_on_Air
    :END:
So that I can [[delegate more effectively]] and [[learn from people]]
https://docs.google.com/a/sachachua.com/document/d/13taKuenogeXwQmoSvOtPgymNdI5IaLH9ZbovHKuUvt4/edit#
*** DONE host at least four episodes for the Frugal FIRE show				:PROJECT:
    :PROPERTIES:
    :CUSTOM_ID: host_at_least_four_episodes_for_the_Frugal_FIRE_show
    :END:
So that I can [[learn from people]] and [[share useful stuff]]

http://frugalfireshow.com

I suggested these as a way to get to know other people exploring financial independence / early retirement. I wanted to see if that was a community I resonated with.
*** DONE [#C] host 10 episodes of Emacs Chats [9/12]								:project:
    :PROPERTIES:
    :LINK:     [[file:~/personal/business.org::*Emacs%20Chats][Emacs Chats]]
		:CUSTOM_ID: host_10_episodes_of_Emacs_Chats__9_12_
    :END:
http://sachachua.com/blog/emacs-chat/

So that I can [[learn from people]] and [[help the Emacs community grow]]

1. [X] Emacs Chat: John Wiegley
2. [X] Emacs Chat: Avdi Grimm (Org-mode, Ruby, etc.)
3. [X] Emacs Chat: Thomas Kjeldahl Nilsson
4. [X] Emacs Chat: Carsten Dominik
5. [X] Emacs Chat: Bastien Guerry
6. [X] Emacs Chat: Sacha Chua (with Bastien Guerry)
7. [X] Emacs Chat: Magnar Sveen (Emacs Rocks)
8. [X] Emacs Chat: Iannis Zannos
9. [X] Emacs Chat: Tom Marble
10. [X] Emacs Chat: Janis Mancevics

** make better decisions
   :PROPERTIES:
   :CUSTOM_ID: make_better_decisions
   :END:
so that I can [[live an awesome life]]

*** TODO [#C] track and reflect on 25 non-trivial decisions/assumptions :project:
    :PROPERTIES:
    :CUSTOM_ID: track_and_reflect_on_25_non_trivial_decisions_assumptions
    :END:
So that I can [[make better decisions]]
As listed in http://sachachua.com/blog/category/decision

What do I want to tweak about how I make decisions?

1. [[http://sachachua.com/blog/category/decision/#post-26177][Hacklab]]
2. [[http://sachachua.com/blog/experiment][Experiment]]
3. [[http://sachachua.com/blog/2013/07/choosing-openness-and-scale/][Openness and scale]]
4. Time

*** TODO add more tracking tools to Quantified Awesome
		:PROPERTIES:
		:LINK:     [[file:~/personal/business.org::*Add%20more%20tracking%20tools%20to%20Quantified%20Awesome][Add more tracking tools to Quantified Awesome]]
		:CUSTOM_ID: add_more_tracking_tools_to_Quantified_Awesome
		:END:
so that I can [[make better decisions]]

- Groceries
- Recipes

** get more value from my time
   :PROPERTIES:
   :CUSTOM_ID: get_more_value_from_my_time
   :END:
so that I can [[live an awesome life]]
*** SOMEDAY write 10 blog posts with Dragon NaturallySpeaking
    :PROPERTIES:
    :CUSTOM_ID: write_10_blog_posts_with_Dragon_NaturallySpeaking
    :END:
so that I can [[get more value from my time]]

Hmm. I am not very good at dictating blog posts, since I write as a way of figuring things out, and I end up jumping around non-linearly. So maybe dictation will have to be more about book notes and transcripts.

- Dictate blog posts
    - Make posts sound more natural
    - Get ideas out faster
    - Rest my hands
- Dictate book notes
    - Rest my hands
    - Read more ergonomically

*** SOMEDAY write AutoHotkey script that has file actions
    :PROPERTIES:
    :CUSTOM_ID: write_AutoHotkey_script_that_has_file_actions
    :END:
So that I can [[get more value from my time]]
*** CANCELLED read the iMacros API
    :PROPERTIES:
    :CUSTOM_ID: read_the_iMacros_API
    :END:
So that I can [[get more value from my time]]
*** CANCELLED learn Plover steno
		:PROPERTIES:
		:CUSTOM_ID: learn_Plover_steno
		:END:
so that I can [[get more value from my time]]
*** CANCELLED set up Selenium for automating web actions
    :PROPERTIES:
    :CUSTOM_ID: set_up_Selenium_for_automating_web_actions
    :END:
So that I can [[get more value from my time]]
** delegate more effectively
   :PROPERTIES:
   :CUSTOM_ID: delegate_more_effectively
   :END:
So that I can [[get more value from my time]]
*** SOMEDAY [#C] delegate 2,000 hours or $20,000 of meaningful, useful work :delegation:project:
   :PROPERTIES:
   :Goal:     Delegate
	 :CUSTOM_ID: delegate_2_000_hours_or__20_000_of_meaningful__useful_work
   :END:
So that I can [[delegate more effectively]] and [[build good karma]]

So far: 

#+begin_src emacs-lisp
  (let ((dollars 8229.45)
        (hours 486))
    (format "%d dollars - %d%%; %d hours - %d%%" 
            dollars (* (/ dollars 20000.0) 100.0)
            hours (* (/ hours 2000.0) 100.0)))
#+end_src

#+RESULTS:
: 8229 dollars - 41%; 486 hours - 24%

The work should:
- move me towards my primary goals
- help assistants improve their skills and justify better rates in the marketplace

Need to compensate for 2,166 hours as of 2014-05-16
*** SOMEDAY add 50 items to my process library 									 :delegation:
    :PROPERTIES:
    :CUSTOM_ID: add_50_items_to_my_process_library
		:LINK:     [[file:~/personal/business.org::*Add%2050%20items%20to%20my%20process%20library][Add 50 items to my process library]]
    :END:
So that I can [[delegate more effectively]] and [[share useful stuff]]

[[https://drive.google.com/a/sachachua.com/#folders/0B8LpkeSVIjRYVHZCQzVCYTJ5X3M][Process library]] - for my virtual assistants and for other people who are interested in delegation

#+CALL: list-files-with-target(directory="~/Google Drive/Delegation - Sacha Chua/Processes", pattern="How to", target=50) :results value org

#+RESULTS:
#+BEGIN_SRC org
35 items - 70%
1. How to add blogs to Feedly
2. How to add resources to the resources page and sidebar widget
3. How to add tags to Flickr sketches
4. How to animate sketches with Autodesk Sketchbook Pro and Camtasia Studio
5. How to convert a Vimeo or YouTube video to MP3 and save it for offline listening
6. How to create a Frugal FIRE event on Google+
7. How to create a Google+ Event banner
8. How to create a Helpers Help Out event on Google+
9. How to download invoices from InvoiceTrack
10. How to draft Q&A posts based on a transcript
11. How to draft an Emacs Basics blog post
12. How to draw and implement highlighted hand-drawn icons using CSS sprites
13. How to extract the MP3 from YouTube or an MP4
14. How to file a healthcare claim for massage
15. How to identify Q&A from a transcript
16. How to import my theme into your local development environment and get ready for work
17. How to look up additional information for people
18. How to post show notes
19. How to prepare for and host a Google Hangout on Air
20. How to process audio in Audacity
21. How to process scheduling requests
22. How to request books from the library
23. How to research related posts
24. How to set up a public conversation over Google Hangouts On Air
25. How to set up a public conversation
26. How to set up a redirection URL
27. How to summarize blog posts as tweets
28. How to transcribe audio
29. How to update Flickr with blog post URLs
30. How to update QuantifiedSelf.ca blog posts with video embeds
31. How to update a blog post with an MP3
32. How to update a book through CreateSpace
33. How to update the MP3 metadata
34. How to upload an MP3 to archive.org
35. How to write a blog post
#+END_SRC

** help the Emacs community grow
   :PROPERTIES:
   :CUSTOM_ID: help_the_Emacs_community_grow
   :END:
so that I can [[tickle my brain]] and [[share useful stuff]]
*** DONE delegate to Emacs geeks
		:PROPERTIES:
		:CUSTOM_ID: delegate_to_Emacs_geeks
		:END:
so that I can [[share useful stuff]] and [[help the Emacs community grow]] and [[learn from people]]

- Alex? waiting
- Oli? waiting
- Adam? scheduled
- Xah?

My Philippine assistants seem more reliable when it comes to work, although they don't have the same level of skills yet. Oh well!

*** SOMEDAY [#C] Develop emacslife.com into beginner/enthusiast resources for Emacs :emacs:project:
		:PROPERTIES:
		:CUSTOM_ID: Develop_emacslife_com_into_beginner_enthusiast_resources_for_Emacs
		:END:
so that I can [[help the Emacs community grow]]

What do I want to learn from working on EmacsLife?

- Organizing questions logically, and adding links between sections
- Writing based on an outline
- Revising with feedback
- Developing a smooth workflow for exporting my blog posts
  - Update monthly, perhaps?
- Herding cats: Delegating to other geeks
- Eventually: structuring courses, creating resources

Sketching the future: 

Because of the time I've invested in working on resources for the
Emacs community, I have the confidence that I can logically structure
my thoughts and write technical learning-oriented books. I have a
community of people happy to proof-read/beta. I have a lot of
experience in creating rich media resources as well.

I have a smooth workflow for identifying topics, outlining them,
organizing the topics, researching information, filling in the gaps
(whether I'm writing things myself or paying other people to do so),
pulling everything together, and publishing and sharing the results.
This may even be self-financing. I create a useful resource of at
least 10,000 words at least every 12 weeks.

This gives me great ways to:
- Learn more about what I'm curious about
- Organize my thoughts and identify gaps
- Communicate clearly, approachably, and engagingly
- Share in scalable ways

*** SOMEDAY [#C] create a 10-week Emacs Basics course :emacs:specific:project:someday:
    :PROPERTIES:
    :CUSTOM_ID: create_a_10_week_Emacs_Basics_course
		:LINK:     [[file:~/personal/business.org::*Emacs%20Basics][Emacs Basics]]
    :END:
So that I can [[help the Emacs community grow]]

http://sachachua.com/blog/tag/emacs-basics

1. [X] Use the mouse
2. [X] [[http://sachachua.com/blog/?p=27062&shareadraft=baba27062_532732552c1f8][Call commands by name with M-x]]
3. [X] Customize and configure
4. [ ] Learn keyboard shortcuts
5. [ ] Learn Emacs Lisp
6. [ ] Customize keyboard shortcuts
7. [ ] Save time with keyboard macros
8. [ ] Be inspired

*** SOMEDAY set up regular Emacs hangouts
    :PROPERTIES:
    :CUSTOM_ID: set_up_regular_Emacs_hangouts
    :END:
so that I can [[help the Emacs community grow]]

Every two weeks? Every month? Need a co-host. 

*** SOMEDAY draw 10 visual guides for learning Emacs 
    :PROPERTIES:
    :CUSTOM_ID: draw_10_visual_guides_for_learning_Emacs
    :END:
So that I can [[help the Emacs community grow]] 
- [X] Beginner's guide
- [X] Keyboard shortcuts
- [X] Org mode
- [X] Dired
- [X] Managing your tasks

** DONE improve my blog
   :PROPERTIES:
   :CUSTOM_ID: improve_my_blog
   :END:
So that I can [[share useful stuff]]
*** CANCELLED split off topic-focused views
    :PROPERTIES:
    :CUSTOM_ID: split_off_topic_focused_views
    :END:
    So that I can [[improve my blog]]
*** SOMEDAY review 31 blogs
    :PROPERTIES:
    :CUSTOM_ID: review_31_blogs
    :END:
    So that I can [[improve my blog]]

#+CALL: list-files-with-target(directory="~/Google Drive/Blog reviews", pattern=".gdoc", target=31) :results value org

#+RESULTS:
#+BEGIN_SRC org
3 items - 9%
1. Engagement, sticky shares - markevans.ca
2. Fat footer, lots of structure - extension.org
3. Lots of comments - rootofgood.com
#+END_SRC

** DONE read and reflect on key philosophical ideas
	 :PROPERTIES:
	 :CUSTOM_ID: read_and_reflect_on_key_philosophical_ideas
	 :END:
So that I can [[live an awesome life]] and [[tickle my brain]]

- Thoreau (Walden): Wanting little lets you be free. Also, note about having people over.
- Emerson (Self-Reliance): Embrace being different.
- Borsodi: Factory life; the quantity-minded vs quality-minded. I don't agree with lots of stuff in the Ugly Civilization, though.


* Old graph
#+begin_src dot :file goals.png :cmdline -Kdot -Tpng :results silent
  digraph G {
    ratio=expand
    node [shape=box]
    "Explore\nEmacs" -> "Learn tools" -> "Tickle my brain" -> "Write blog posts" -> "Share useful stuff" -> "Build good karma" -> "Learn from others"
    "Automate" -> "Learn tools"
    "Explore AutoHotkey" -> "Automate"
    "Read iMacros capabilities" -> "Automate"
    "Set up Selenium for Java" -> "Automate"
    "Share useful stuff" -> "Make technical topics friendlier" -> "Help the Emacs community be even awesomer" -> "Tickle my brain"
    "Make Emacs beginner resources" -> "Share useful stuff"
    "Read" -> "Tickle my brain"
    "Draw" -> "Share useful stuff"
    "Draw" -> "Think more clearly"
    "Write blog posts" -> "Think more clearly"
    "Delegate" -> "Share opportunities"
    "Delegate" -> "Expand capabilities"
    "Tickle my brain" -> "Expand capabilities"
    "Do consulting" -> "Tickle my brain"
    "Package" -> "Share useful stuff"
    "Respond" -> "Learn from others"
    "Respond" -> "Build good karma"
    "Build good karma" -> "Have a good foundation"
    "Get better at Javascript\n(NodeJS, JQuery)" -> "Learn tools"
    "Get better at\nRuby, Rails" -> "Learn tools"
    "Delegate" -> "Build process library" -> "Share useful stuff"
    "Delegate" -> "Learn from others"
    "Learn from others" -> "Make good decisions" -> "Enjoy life"
    "Think more clearly" -> "Make good decisions" -> "Shift my habits"
    "Understand my life" -> "Think more clearly"
    "Ask, experiment, measure" -> "Make good decisions"
    "Sketchnote presentations" -> "Share useful stuff" 
    "Sketchnote presentations" -> "Keep good ideas from disappearing"
  }
#+end_src

#+ATTR_HTML: :width 640
[[http://sachachua.com/sharing/goals.png][file:goals.png]]

* Code

#+name: list-files-with-target
#+begin_src emacs-lisp :var directory="~/Google Drive/Delegation/Processes" :var pattern="How to" :var target=50 :var strip="\\.gdoc$"
  (let ((count 0)
        (files
         (directory-files directory nil pattern)))
    (format "%d items - %d%%\n%s" 
            (length files)
            (/ (* 100.0 (length files)) target)
            (mapconcat
             (lambda (x)
               (setq count (1+ count))
               (format "%d. %s" count (replace-regexp-in-string strip "" x)))
             files
             "\n")))
#+end_src

#+name: graph-from-tables
#+BEGIN_SRC emacs-lisp :var fill-column=20 :var tag="goal"
  (defvar include-someday nil)
  (defun sacha/fill-string (string new-fill-column &optional replace-char)
    "Wrap STRING to NEW-FILL-COLUMN. Change newlines to REPLACE-CHAR."
    (with-temp-buffer
      (insert string)
      (let ((fill-column new-fill-column))
        (fill-region (point-min) (point-max))
        (if replace-char
            (progn
              (goto-char (point-min))
              (while (re-search-forward "\n" nil t)
                (replace-match replace-char t t))))
        (buffer-string))))
    
  (defun sacha/org-map-goals (tag)
    "Return an alist, based on the TAG tree and \"so that I can\" link structure.
  Structure: ((nodes . ((components) ...)) (edges . ((a . b) ...)))"
    (let (nodes edges)
     ;; Go through the entries
      (org-map-entries
       (lambda ()
         (let ((heading (org-heading-components)))
           (unless (member (elt heading 2) (if include-someday '("DONE" "CANCELLED") '("DONE" "SOMEDAY" "CANCELLED")))
             (save-excursion
               (save-restriction
                 ;; Ignore subtrees in the body
                 (org-narrow-to-subtree)
                 (save-excursion
                   (org-set-property "CUSTOM_ID" (replace-regexp-in-string "[^A-Za-z0-9]" "_" (elt heading 4))))
                 (end-of-line)
                 (narrow-to-region
                  (point-min)
                  (if (re-search-forward
                       (concat "[\r\n]\\(" org-outline-regexp "\\)") nil t)
                      (match-beginning 1)
                    (point-max)))
                 (goto-char (point-min))
                 (when (> (car heading) 1)
                   (setq nodes (cons heading nodes)))
                 (when (re-search-forward "so that I can" nil t)
                   (while (re-search-forward org-bracket-link-regexp (line-end-position) t)
                     (setq edges (cons (cons (elt heading 4) (match-string-no-properties 1)) edges)))))))))
       tag)
      (list (cons 'nodes nodes) (cons 'edges edges)))) 

  (defun sacha/org-map-to-graphviz (map fill-column)
    "Convert MAP to a graphviz representation. Wrap titles at FILL-COLUMN."
    (concat
     "digraph G {\n"
     "node [shape=box,fontname=\"Open Sans\",pad=1]\n"
     "edge [color=\"#CCCCCC\"]\n"
     (mapconcat
      (lambda (x)
        (format "\"%s\" -> \"%s\"" 
                (sacha/fill-string (car x) fill-column "\\n")
                (sacha/fill-string (cdr x) fill-column "\\n")))
      (cdr (assoc 'edges map))
      "\n")
     "\n"
     (mapconcat (lambda (x)
                  (format
                   (if (null (elt x 2))
                       (concat "\"%s\" [style=filled, URL=\"#%s\", tooltip=\"%s\"]")
                     "\"%s\" [URL=\"#%s\", tooltip=\"%s\"]")
                   (sacha/fill-string (elt x 4) fill-column "\\n")
                   (replace-regexp-in-string "[^A-Za-z0-9]" "_" (elt x 4))
                   (elt x 4)))
                (cdr (assoc 'nodes map)) "\n")
     "}\n"))
  (org-babel-execute:dot (sacha/org-map-to-graphviz (sacha/org-map-goals tag) fill-column) params)
#+END_SRC

#+begin_html
<style type="text/css">
.back-to-top {
    position: fixed;
    bottom: 2em;
    right: 0px;
    text-decoration: none;
    color: #000000;
    background-color: rgba(235, 235, 235, 0.80);
    font-size: 12px;
    padding: 1em;
    display: none;
}

.back-to-top:hover {    
    background-color: rgba(135, 135, 135, 0.50);
}
</style>

<a class="back-to-top" href="#top">Back to top</a>

<script type="text/javascript">
    var offset = 220;
    var duration = 500;
    jQuery(window).scroll(function() {
        if (jQuery(this).scrollTop() > offset) {
            jQuery('.back-to-top').fadeIn(duration);
        } else {
            jQuery('.back-to-top').fadeOut(duration);
        }
    });
</script>    
#+end_html

#+begin_html
</div></div><!-- columns, row-->
#+end_html
